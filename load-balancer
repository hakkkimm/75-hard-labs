AWSTemplateFormatVersion: "2010-09-09"
Description: "EC2 Instances behind Load Balancer"
Resources:

  WebSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable HTTP traffic"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: X.X.X.X/32
          
  InstanceA:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-089c26792dcb1fbd4"
      InstanceType: "t2.micro"
      KeyName: "hakim-labs-key"
      SecurityGroupIds: [!Ref WebSecurityGroup]
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          service httpd enable
          service httpd start
          echo "<h1>This is instance A</h1>" > /var/www/html/index.html
          
  InstanceB:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-089c26792dcb1fbd4"
      InstanceType: "t2.micro"
      KeyName: "hakim-labs-key"
      SecurityGroupIds: [!Ref WebSecurityGroup]
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          service httpd enable
          service httpd start
          echo "<h1>This is instance B</h1>" > /var/www/html/index.html
          
  ALBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable HTTP traffic for ALB"
      SecurityGroupIngress:
        - SourceSecurityGroupId: !GetAtt WebSecurityGroup.GroupId
          IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          
  ALB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Subnets:
      - subnet-b8610ac2
      - subnet-af77a4e3
      - subnet-4f556827
      SecurityGroups: [!GetAtt ALBSecurityGroup.GroupId]
      Scheme: "internet-facing"
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "60"
  WebTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Protocol: "HTTP"
      Port: 80
      VpcId: "vpc-19574271"
      HealthCheckProtocol: "HTTP"
      HealthCheckPort: 80
      HealthCheckPath: "/"
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Targets:
      - Id: !Ref InstanceA
      - Id: !Ref InstanceB
  ALBListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: 'forward'
          TargetGroupArn: !Ref WebTargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP
